name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate deployment artifact
      if: github.event_name != 'pull_request'
      run: |
        # 创建部署文件
        mkdir -p deploy
        cp docker-compose.yml deploy/
        cp env.example deploy/
        
        # 创建使用预构建镜像的docker-compose文件
        cat > deploy/docker-compose.prebuilt.yml << 'EOF'
        version: '3.8'
        
        services:
          ikuai-komari-agent:
            image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            container_name: ikuai-komari-agent
            restart: unless-stopped
            
            # 环境变量配置 - 从.env文件读取
            env_file:
              - .env
            
            # 卷挂载 - 持久化日志
            volumes:
              - ./logs:/app/logs
              - /etc/localtime:/etc/localtime:ro  # 同步主机时间
            
            # 网络模式 - 使用主机网络以便访问局域网设备
            network_mode: host
            
            # 健康检查
            healthcheck:
              test: ["CMD-SHELL", "pgrep -f ikuai_komari_agent.py || exit 1"]
              interval: 30s
              timeout: 10s
              retries: 3
              start_period: 10s
            
            # 日志配置
            logging:
              driver: "json-file"
              options:
                max-size: "10m"
                max-file: "3"
        EOF

    - name: Upload deployment files
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v3
      with:
        name: deployment-files
        path: deploy/
